module.exports = function(grunt) {
    grunt.registerMultiTask('readv', 'tst',function(){
        var done=this.async();
//        grunt.config.data.readv.app.version=[];
        var rest={};
        var i=0;
        var vers=0;
        var result;
        var reg=/revno: (\d+)/;
//        grunt.util.spawn({cmd:'/usr/bin/bzr',args:['version-info'],opts:{}},function(error,result,code){
// git rev-list HEAD --count
        grunt.util.spawn({cmd:'/usr/bin/git',args:['rev-list','HEAD','--count'],opts:{}},function(error,result,code){
//	    var res=result.stdout.match(reg);
	    var res=result.stdout;
//	    vers=res[1];
	    vers=res;
	    grunt.log.warn("Retrieved version: "+("1.1."+vers).green);
//	    grunt.config.set('vers','1.1.'+vers);
	    grunt.option('vers','1.1.'+vers);
//	    console.log(res[1]);
//	    grunt.file.write('config.js','{"ver":"1.1.'+vers+'"}');
//	    console.log('1');
	    done();
        });
//      console.log("1");
//        grunt.config.data.readv.app.files.src.forEach(function(file){
//            i++;
//            grunt.config.data.readv.app.version[file]='0';
//            grunt.util.spawn({cmd:'bzr',args:['version-info'],opts:{}},function(error,result,code){
//                grunt.config.data.readv.app.version[file]=result.stdout;
//                grunt.log.warn("file: "+file.green+" version: "+result.stdout.green);
//                i--;
//                if (i==0){
//                    var inc="";
//                  console.log(grunt.config.data.readv.app.version);
//                    for (var a in grunt.config.data.readv.app.version){
//                        var b=a;
//                        if (a.match(/.css/))
//                        {
//                            if (!a.match(/.min.css/))
//                            {
//                                b=a.replace(/^(.*).css/,'$1.min.css');
//                            }
//                            inc+='\t<link type="text/css" rel="stylesheet" href="'+b+'?v='+grunt.config.data.readv.app.version[a]+'" />\n';
//                        }
//                        if (a.match(/.js/))
//                        {
//                            if (!a.match(/.min.js/))
//                            {
//                                b=a.replace(/^(.*).js/,'$1.min.js');
//                            }
//                            inc+='\t<script src="'+b+'?v='+grunt.config.data.readv.app.version[a]+'"></script>\n';
//                            vers=grunt.config.data.readv.app.version[a];
//                        }
//                    };
//                    var f=grunt.file.read(grunt.config.data.readv.app.target.src);
//                    var nf=grunt.template.process(f,{data:{includes:inc}});
//                    grunt.file.write(grunt.config.data.readv.app.target.dest,nf);
//                    grunt.file.write('version.js','Tasks.Vars.version="0.1.'+vers+'";');
//                    grunt.file.write('./php/version.php','<?php $ver="0.1.'+vers+'"; ?>');
//                    grunt.log.ok(grunt.config.data.readv.app.target.dest+" succesful created");
//                    done();
//                }
//            });

//          console.log("2");
//        });
//      console.log(rest);
//	done();
//      console.log(grunt.config.data.echo);
    });
};